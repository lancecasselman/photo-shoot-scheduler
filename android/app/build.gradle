plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace "com.thelegacyphotography.photomanager"
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.thelegacyphotography.photomanager"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // Capacitor version from package.json (@capacitor/core: 7.4.3, plugins: 7.0.2)
    def CAP_VER = "7.4.3"
    
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    
    // Capacitor Maven dependencies
    implementation "com.capacitorjs:capacitor-android:$CAP_VER"
    implementation "com.capacitorjs:app:7.0.2"
    implementation "com.capacitorjs:camera:7.0.2"
    implementation "com.capacitorjs:device:7.0.2"
    implementation "com.capacitorjs:keyboard:7.0.2"
    implementation "com.capacitorjs:network:7.0.2"
    implementation "com.capacitorjs:push-notifications:7.0.2"
    implementation "com.capacitorjs:splash-screen:7.0.2"
    implementation "com.capacitorjs:status-bar:7.0.2"
    
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    
    // Only include capacitor-cordova-android-plugins if it exists
    def cordovaPluginsDir = file('../capacitor-cordova-android-plugins')
    if (cordovaPluginsDir.exists()) {
        implementation project(':capacitor-cordova-android-plugins')
    }
}

// Apply Capacitor build with Cordova conditional check
def cordovaVars = file('../capacitor-cordova-android-plugins/cordova.variables.gradle')
if (cordovaVars.exists()) {
    apply from: cordovaVars
}

apply from: 'capacitor.build.gradle'
apply from: '../capacitor-build-fix.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
