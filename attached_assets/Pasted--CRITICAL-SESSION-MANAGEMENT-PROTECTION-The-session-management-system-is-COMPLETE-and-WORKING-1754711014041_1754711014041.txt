ðŸš¨ CRITICAL: SESSION MANAGEMENT PROTECTION ðŸš¨
The session management system is COMPLETE and WORKING PERFECTLY. 
DO NOT modify any session-related code or files.

TASK: COMPLETELY REBUILD the storage quota and billing system from scratch.

**STEP 1: WIPE EXISTING STORAGE SYSTEM**
- Delete all current storage-related files and code
- Remove existing storage tables/schemas 
- Clear any broken storage functions
- Start completely fresh with storage implementation

**STEP 2: BUILD NEW STORAGE SYSTEM WITH THESE REQUIREMENTS:**

**Storage Limits:**
- Every user starts with 5GB free storage
- When 5GB is reached, block all photo uploads until they purchase storage
- Storage add-ons are sold in 1TB increments at $25/month each
- When any TB package is full, block uploads again until they buy another 1TB
- Users can purchase multiple 1TB packages as needed

**Billing Integration:**
- Integrate with Stripe for automated monthly billing
- Each 1TB package = $25/month recurring subscription
- When user purchases storage, immediately unlock upload capability
- Handle subscription management (upgrades, downgrades, cancellations)

**User Experience:**
- Show storage usage progress bar in dashboard (e.g., "4.2GB / 5GB used")
- When approaching limit, show warning notifications
- When limit reached, show upgrade prompt with Stripe checkout
- Display all active storage packages and billing in account settings

**Technical Requirements:**
- Track file sizes on upload and deduct from available storage
- Calculate total storage across all user's sessions and galleries
- Prevent uploads when quota exceeded
- Update storage calculations when files are deleted
- Handle Stripe webhooks for successful/failed payments

**Database Schema (Build Fresh):**
- User storage quota tracking table
- Active storage subscriptions per user table
- Storage usage calculations table
- Billing history table

**Integration Points:**
- Read-only access to session management data for calculating usage
- Hook into existing photo upload functions to enforce limits
- Connect to existing Stripe billing system

**File Structure:**
Create new files:
- storage-system.js (main logic)
- storage-routes.js (API endpoints)
- storage-dashboard.html (user interface)
- storage-billing.js (Stripe integration)

**Expected Result:**
A completely fresh, working storage quota system that enforces limits, handles billing, and provides clear user feedback - without touching any session management code.

Start by wiping the existing broken storage system, then build the new one from scratch.