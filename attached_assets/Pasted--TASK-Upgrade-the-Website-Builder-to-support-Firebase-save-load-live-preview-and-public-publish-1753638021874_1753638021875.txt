🔧 TASK: Upgrade the Website Builder to support Firebase save/load, live preview, and public publishing at /site/:username.

---

1️⃣ SAVE SITE DATA TO FIREBASE

• On "Save" button in Website Builder, write the following data to Firestore under the current user's UID:

  Collection: websites  
  Document ID: currentUser.uid  
  Fields:
    - title (string)
    - sections (array of blocks: { type, content, imageURL })
    - theme (string)
    - updatedAt (timestamp)

• If data exists, pre-fill the builder when page loads.
• Implement autosave every 10 seconds (or only save on button click for now).

---

2️⃣ ENABLE PUBLIC PAGE ROUTE: /site/:username

• Create a route or page template that renders site data based on the username.
• Load the site config from Firestore:
  Collection: websites  
  Document with a customUsername or uid that matches the route.

• Render a static site view with title, content blocks, and images.
• Allow themes (e.g., classic, bold, dark, modern) and apply CSS class accordingly.

• Example URL:
  - https://photographyschedule.com/site/johncasselman

---

3️⃣ ADD THEME SUPPORT IN UI

• In Website Builder, add a theme dropdown with options:
  - “Classic”
  - “Modern”
  - “Dark Mode”
  - “Bold Headlines”

• Save selected theme to Firestore and apply it on preview & public view.

---

4️⃣ SMART DEFAULT FILLER ON FIRST VISIT

• If the user has no saved site data:
  - Pre-fill title with “Hi, I’m [user.displayName]”
  - Auto-generate a hero section like:
    “I’m a wedding + family photographer based in South Carolina. Let’s create something unforgettable.”

• Use sample blocks and example images for inspiration.

---

5️⃣ PUBLISH + SHAREABLE LINK

• Add a “Publish Site” button in the builder.
• Once clicked, confirm success and display:
  - “Your site is live: https://photographyschedule.com/site/username”
  - Copy-to-clipboard button next to it

---

💡 BONUS IDEAS TO CONSIDER (optional):

• Add a preview button that loads their site into an iframe before publishing.
• Let users unpublish by deleting their public doc from Firestore.
• Optionally store published status with a boolean flag.

---

🧱 FIREBASE REQUIREMENTS:

Make sure Firebase Auth + Firestore are initialized.
Make sure Firestore has:
  Collection: websites
  Docs: one per user
  Optional field: customUsername (or fallback to uid)

---

🧪 GOAL:
Allow every photographer to build, save, and share their own mini-site under your platform, using clean hosted routes like /site/:username, all powered by Firebase.

