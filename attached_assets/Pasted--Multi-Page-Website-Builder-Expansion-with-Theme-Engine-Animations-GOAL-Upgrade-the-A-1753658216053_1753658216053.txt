// 🚀 Multi-Page Website Builder Expansion with Theme Engine & Animations

// 🔧 GOAL: Upgrade the Advanced Builder to support:
// 1. 4 core pages: Home, About Me, Gallery, Contact Us
// 2. Page navigation bar
// 3. Editable blocks per page (like the single-page setup, but scoped to pages)
// 4. Template/theme system with 15–20 pre-made, professional site designs
// 5. Optional scroll animations and responsive layout polish

// ✅ FILE STRUCTURE:

// components/
// ├── SiteBuilder.jsx              ← Top-level controller (page & theme state)
// ├── PageNavigator.jsx           ← Nav bar (Home, About, Gallery, Contact)
// ├── BlockLibrary.jsx            ← Sidebar block adder
// ├── LivePreview.jsx             ← Page preview with animation support
// ├── BlockEditor.jsx             ← Block editing panel
// ├── themes/                     ← Folder of pre-made theme JSONs
// │    ├── elegant.js
// │    ├── boho.js
// │    ├── coastal.js
// └── firebase.js                 ← Save & publish logic

// public/
// └── advanced-builder.html       ← Mount point

// ✅ SiteBuilder.jsx (New Structure)
// - Tracks activePage (home, about, gallery, contact)
// - Tracks activeTheme (selected template)
// - blocks = { home: [...], about: [...], gallery: [...], contact: [...] }

const [activePage, setActivePage] = useState("home");
const [siteBlocks, setSiteBlocks] = useState({
  home: [],
  about: [],
  gallery: [],
  contact: [],
});

const addBlock = (type) => {
  const id = Date.now();
  const newBlock = { id, type, content: "Edit me", styles: {}, animations: {} };
  setSiteBlocks((prev) => ({
    ...prev,
    [activePage]: [...prev[activePage], newBlock],
  }));
};

const updateBlock = (updated) => {
  setSiteBlocks((prev) => ({
    ...prev,
    [activePage]: prev[activePage].map((b) =>
      b.id === updated.id ? updated : b
    ),
  }));
};

const applyTheme = (themeJSON) => {
  setSiteBlocks(themeJSON.blocks);
  setActiveTheme(themeJSON.meta);
};

// ✅ PageNavigator.jsx
// Topbar with 4 buttons → sets activePage

export default function PageNavigator({ currentPage, setPage }) {
  const pages = ["home", "about", "gallery", "contact"];
  return (
    <div className="navbar">
      {pages.map((p) => (
        <button key={p} onClick={() => setPage(p)} className={p === currentPage ? "active" : ""}>
          {p.charAt(0).toUpperCase() + p.slice(1)}
        </button>
      ))}
    </div>
  );
}

// ✅ LivePreview.jsx
// Renders only blocks for the current page with optional scroll effects

{blocks.map((block) => {
  const style = {
    ...block.styles,
    animation: block.animations?.type ? `${block.animations.type} 1s` : undefined,
  };
  return (
    <div key={block.id} onClick={() => onSelect(block)} style={style}>
      {renderBlock(block)}
    </div>
  );
})}

// ✅ themes/elegant.js (example)

export default {
  meta: { name: "Elegant", font: "Georgia", color: "#222" },
  blocks: {
    home: [
      {
        id: 1,
        type: "heading",
        content: "Welcome to My Studio",
        styles: { fontSize: "42px", color: "#333", textAlign: "center" },
        animations: { type: "fade-in" },
      },
    ],
    about: [],
    gallery: [],
    contact: [],
  },
};

// ✅ firebase.js
// Update saveSiteConfig() to support multi-page

const saveSiteConfig = async (siteConfig) => {
  const uid = currentUser.uid || "demo";
  await setDoc(doc(db, "users", uid), {
    siteConfig,
    updatedAt: Date.now(),
  });
};

const publishSite = async (username) => {
  const fn = httpsCallable(functions, "generateStaticSite");
  await fn({ username });
};

// ✅ generateStaticSite() (Firebase function)
// Update logic to render nav + 4 page HTML files: index.html, about.html, gallery.html, contact.html

// ✅ Bonus:
// - Add "Preview Theme" dropdown to SiteBuilder
// - When clicked, apply selected theme JSON
// - Scroll animation support: fade-in, slide-up, zoom-in, etc.
// - Responsive: use flex/grid + % widths, media queries or Tailwind