TASK: Fully upgrade the current storefront builder to a dynamic, block-based visual website editor. All text and image content should be editable directly in the preview window. Add page switching, multi-theme support, and real-time Firebase sync. This editor must be smooth, modern, and exceed Pixieset/Format-level functionality.

PHASE 1: INLINE TEXT + IMAGE EDITING

1. Make all text fields editable using `contenteditable="true"`
   - On blur or Enter, save the updated text into Firebase under:
     `/users/{userId}/storefront/content/{page}/{blockId}/text`

2. Make images editable:
   - On image click, open a file input
   - Upload the selected file to Firebase Storage under:
     `/storefront-images/{userId}/[filename]`
   - Replace the image’s `src` in the DOM and save the new URL in Firestore:
     `/users/{userId}/storefront/content/{page}/{blockId}/imageUrl`

3. Give every block a unique `blockId` for tracking and syncing content

PHASE 2: PAGE SWITCHING

1. Add a dropdown menu or sidebar tabs to switch between pages:
   - Pages: Home, About, Gallery, Store, Contact
   - On switch, load content and layout from:
     `/users/{userId}/storefront/content/{selectedPage}.json`
   - Render preview using the layout blocks for that page

2. Allow edits on all pages, not just Home

PHASE 3: THEME SWITCHING

1. Create a theme selector modal
   - Display previews for each theme from:
     `/templates/{themeName}/preview.jpg`
   - On select:
     - Load `/templates/{themeName}/[page].html`
     - Save theme name to: `/users/{userId}/storefront/theme`
     - Update editor preview accordingly

2. On theme change, preserve user content where possible based on matching block types

PHASE 4: BLOCK SYSTEM + DRAG-AND-DROP

1. Replace static layout with a dynamic block renderer
   - Store layout as:
     ```json
     {
       "blocks": [
         { "type": "hero", "id": "block1", "content": { "headline": "...", "imageUrl": "..." } },
         { "type": "gallery", "id": "block2", "content": {} }
       ]
     }
     ```
   - Each block is independently editable and positionable

2. Build a visual “Add Block” panel with available block types:
   - Hero, About, Image Grid, Text, CTA, Testimonial, Pricing, Blog

3. Implement drag-and-drop using `Sortable.js` or custom handler
   - On reorder, update the order in Firebase and re-render

PHASE 5: SAVE + PUBLISH SYSTEM

1. Every content and layout change must update in real time to Firebase
2. Add a “Preview” and “Publish” button:
   - Preview updates the live canvas
   - Publish builds a deployable version of the site at:
     - `yourplatform.com/{username}`
     - or custom domain if configured

3. Optional: Save static HTML snapshot or JSON version of full site under:
   `/publishedSites/{userId}`

PHASE 6: UX POLISH

1. Add loading indicator for template/page loads
2. Add toast or alert: “Changes Saved” or “Image Updated”
3. Make all editing inputs mobile-friendly and touch-safe
4. Ensure undo (or cancel changes) per block

FINAL GOAL:
Create a truly professional, real-time visual site editor that allows photographers to build and customize full storefronts with 1:1 control over text, layout, and media — no pop-ups, no modals, no friction. This must be smoother and more intuitive than Pixieset, Framer, or Format, and fully integrated with Firebase for saving and deployment.
