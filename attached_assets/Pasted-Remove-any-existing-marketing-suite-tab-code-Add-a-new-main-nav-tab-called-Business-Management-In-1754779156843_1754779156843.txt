Remove any existing marketing suite tab/code.
Add a new main nav tab called Business Management.

Inside this tab, create five sub-sections:

Dashboard

At the top:

Show “Total Earnings” (sum of all session card price fields for the selected date range).

Show “Total Expenses” (sum of all logged expenses for date range).

Show “Net Profit” (earnings – expenses).

Add date range selector: “Today,” “This Week,” “This Month,” “This Year,” “Custom.”

Add two charts:

Bar chart of Earnings per Month (pulled from sessions data).

Line chart of Net Profit over Time.

Fetch earnings by querying the existing session cards collection in Firestore (or wherever session data is stored) using price and date.

Expenses come from the new Expense Tracker (see below).

AI Assistant

Integrate OpenAI API (already connected in the app — reuse API key logic).

Tabs inside AI Assistant:

Blog Writer – Large text area, prompt field, “Generate Blog Post” button. Output appears in a rich text editor so user can format and copy.

Social Media Post Builder – Fields: Platform selector (Facebook, Instagram, TikTok, Twitter), topic/prompt input, optional “Include Hashtags” checkbox. Generates a post with hashtags for selected platform.

Quick Ideas – Generates 3–5 short promotional or post ideas instantly from a simple one-line user prompt.

Store AI prompt history in Firestore under users/{userId}/aiHistory so user can revisit old prompts.

Expense Tracker

Table layout with:

Date picker

Category dropdown (Software, Equipment, Travel, Marketing, Misc)

Description text field

Amount (USD)

Recurring? (checkbox) → If true, auto-add monthly entry on same date.

Add button: “+ New Expense”

Allow editing and deleting entries.

Store in Firestore at users/{userId}/expenses.

Include “Export to CSV” button.

Mileage Tracker

Table layout with:

Date

Start Location

End Location

Miles Driven

Purpose dropdown (Client Work, Supplies, Other)

“+ Add Trip” button.

If Google Maps API key is available, auto-calculate miles between start and end.

Store in Firestore at users/{userId}/mileage.

Reports

Generate combined report for any date range:

Earnings (from sessions)

Expenses

Mileage (total miles)

Net Profit

Export options: CSV, PDF.

PDF should have your app’s branding and charts included.

UI Requirements:

Add “Business Management” icon to sidebar (briefcase or chart icon).

Use same UI theme and component styles as rest of app.

Make sections responsive for mobile and desktop.

Use modular code so AI Assistant can be reused in other tabs.

Backend Notes:

All data stored per user (auth user ID).

For earnings: Query existing sessions collection, summing the price field.

For expenses/mileage: Create new collections under each user’s Firestore doc.

AI Assistant uses existing OpenAI API integration (if none, add OPENAI_API_KEY in .env).

When finished, push all changes to the active branch, test each sub-section, and confirm no console errors.

